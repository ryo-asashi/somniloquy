[{"path":"https://ryo-asashi.github.io/somniloquy/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 somniloquy authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryoichi Asashiba. Author, maintainer.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Asashiba R (2025). somniloquy: Collection Miscellaneous R Functions. R package version 0.1.1, https://github.com/ryo-asashi/somniloquy.","code":"@Manual{,   title = {somniloquy: A Collection of Miscellaneous R Functions},   author = {Ryoichi Asashiba},   year = {2025},   note = {R package version 0.1.1},   url = {https://github.com/ryo-asashi/somniloquy}, }"},{"path":"https://ryo-asashi.github.io/somniloquy/index.html","id":"somniloquy-","dir":"","previous_headings":"","what":"A Collection of Miscellaneous R Functions","title":"A Collection of Miscellaneous R Functions","text":"package personal collection miscellaneous R functions developed several study groups personal projects. package serves personal toolkit record learning experiences.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Collection of Miscellaneous R Functions","text":"can install development version somniloquy GitHub :","code":"# install.packages(\"pak\") pak::pak(\"ryo-asashi/somniloquy\")"},{"path":"https://ryo-asashi.github.io/somniloquy/reference/calibration_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Calibration Plots — calibration_plot","title":"Create Calibration Plots — calibration_plot","text":"calibration_plot() generates calibration plot assess performance model's probabilistic predictions.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/reference/calibration_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Calibration Plots — calibration_plot","text":"","code":"calibration_plot(   actual,   predicted,   breaks = seq(0, 1, by = 0.1),   show_plot = TRUE,   ... )"},{"path":"https://ryo-asashi.github.io/somniloquy/reference/calibration_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Calibration Plots — calibration_plot","text":"actual vector true outcomes. Must numeric vector containing 0 1. predicted numeric vector predicted probabilities, typically ranging 0 1. breaks numeric vector cut points used bin predicted values. Defaults seq(0, 1, = .1). show_plot logical. TRUE (default), plot displayed. FALSE, summary data returned without plotting. ... additional arguments passed plot() function. can used customize plot's title (main), color (col), point line types (type), etc.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/reference/calibration_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Calibration Plots — calibration_plot","text":"show_plot = TRUE, function draws plot side effect invisibly returns data frame summary statistics. show_plot = FALSE, visibly returns data frame. returned data frame includes following columns: bin bin number predictions assigned. n number observations bin. actual mean true outcomes bin (.e., fraction positives). predicted mean predicted probabilities bin.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/reference/calibration_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Calibration Plots — calibration_plot","text":"function groups predicted probabilities bins findInterval(predicted, breaks, rightmost.closed = TRUE, left.open = FALSE, .inside = FALSE), plots mean predicted probability (x-axis) fraction positive actual outcomes (y-axis) bin. perfectly calibrated model points lying diagonal line \\(y = x\\), indicating predicted probability , example, 0.8 corresponds 80 percent proportion positive outcomes.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/reference/calibration_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Calibration Plots — calibration_plot","text":"","code":"# Generate sample data n_obs <- 500 actual <- sample(0:1, n_obs, replace = TRUE, prob = c(0.7, 0.3))  # Generate slightly miscalibrated predictions based on actuals predicted <- ifelse(actual == 1,                     rbeta(n_obs, shape1 = 4, shape2 = 1.5),                     rbeta(n_obs, shape1 = 1, shape2 = 4)) predicted <- pmin(pmax(predicted, 0), 1)  # Basic plot calibration_plot(actual, predicted)   # Customize the plot calibration_plot(actual, predicted,                  main = \"Calibration Plot\",                  xlab = \"Mean Predicted Probability\",                  ylab = \"Observed Fraction of Positives\",                  col = \"maroon\",                  pch = 19,                  cex = 1.2)  abline(0, 1, col = \"gray50\", lty = 2L)   # Get the summary data without plotting cal_data <- calibration_plot(actual, predicted, show_plot = FALSE) print(cal_data) #> # A tibble: 10 × 4 #>      bin     n actual predicted #>    <int> <int>  <dbl>     <dbl> #>  1     1   104 0         0.0477 #>  2     2    89 0         0.145  #>  3     3    59 0.0169    0.246  #>  4     4    50 0.18      0.353  #>  5     5    41 0.293     0.445  #>  6     6    21 0.667     0.550  #>  7     7    24 0.75      0.648  #>  8     8    41 0.951     0.754  #>  9     9    43 1         0.858  #> 10    10    28 1         0.945"},{"path":"https://ryo-asashi.github.io/somniloquy/reference/excess_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Excess Plots — excess_plot","title":"Create Excess Plots — excess_plot","text":"`excess_plot()` creates mean median excess plot side-effect returns data frame invisibly.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/reference/excess_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Excess Plots — excess_plot","text":"","code":"excess_plot(   x,   method = c(\"mean\", \"median\"),   mode = c(\"exact\", \"interpolate\"),   show_plot = TRUE,   ... )"},{"path":"https://ryo-asashi.github.io/somniloquy/reference/excess_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Excess Plots — excess_plot","text":"x numeric vector. method \"mean\" \"median\". mode \"exact\" \"interpolate\". show_plot logical. ... optional arguments passed plot() function, main, xlab, ylab, col, etc.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/reference/excess_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Excess Plots — excess_plot","text":"`excess_plot()` returns data frame containing data used plotting. show_plot TRUE, data frame returned invisibly.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/reference/excess_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Excess Plots — excess_plot","text":"`excess_plot()` generates mean median excess plot, key tool visually assessing tail behavior distribution. Mean Excess Plot (MEP) represents function \\(e(u) = \\mathrm{E}[\\;\\mathrm{X} - u\\mid\\mathrm{X} > u\\;]\\), .e., average exceedances given threshold u. plot helps identifying type tail behavior. upward trend suggests heavy-tailed distribution, flat trend indicates exponential distribution, downward trend points light-tailed distribution. Median Excess Plot similar MEP, uses median exceedances instead mean. makes plot robust outliers.","code":""},{"path":"https://ryo-asashi.github.io/somniloquy/reference/excess_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Excess Plots — excess_plot","text":"","code":"# Create a mean excess plot excess_plot(x = rexp(100))   # Create a median excess plot without showing the plot excess_data <- excess_plot(x = rexp(100), method = \"median\", show_plot = FALSE)  # Customize the plot appearance excess_plot(x = rexp(100), col = \"maroon\", main = \"Mean Excess Plot\")"},{"path":"https://ryo-asashi.github.io/somniloquy/reference/somniloquy-package.html","id":null,"dir":"Reference","previous_headings":"","what":"somniloquy: A Collection of Miscellaneous R Functions — somniloquy-package","title":"somniloquy: A Collection of Miscellaneous R Functions — somniloquy-package","text":"package personal collection miscellaneous R functions developed several study groups personal projects. package serves personal toolkit record learning experiences.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/somniloquy/reference/somniloquy-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"somniloquy: A Collection of Miscellaneous R Functions — somniloquy-package","text":"Maintainer: Ryoichi Asashiba ryoichi.asashiba@gmail.com","code":""}]
