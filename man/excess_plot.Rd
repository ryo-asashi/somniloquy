% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/excess_plot.R
\name{excess_plot}
\alias{excess_plot}
\title{Create Excess Plots}
\usage{
excess_plot(
  x,
  method = c("mean", "median"),
  mode = c("exact", "interpolate"),
  show_plot = TRUE,
  ...
)
}
\arguments{
\item{x}{a numeric vector.}

\item{method}{"mean" or "median".}

\item{mode}{"exact" or "interpolate".}

\item{show_plot}{logical.}

\item{...}{optional arguments to be passed to the \code{plot()} function, such as \code{main}, \code{xlab}, \code{ylab}, \code{col}, etc.}
}
\value{
`excess_plot()` returns a data frame containing the data used for plotting.
If \code{show_plot} is \code{TRUE}, the data frame is returned invisibly.
}
\description{
`excess_plot()` creates a mean or median excess plot as a side-effect and returns the data frame invisibly.
}
\details{
`excess_plot()` generates a mean or median excess plot, which is a key tool for visually assessing the tail behavior of a distribution.

Mean Excess Plot (MEP) represents the function \eqn{e(u) = \mathrm{E}[\;\mathrm{X} - u\mid\mathrm{X} > u\;]}, i.e., the average of all exceedances over a given threshold \code{u}.
This plot helps in identifying the type of tail behavior.
An upward trend suggests a heavy-tailed distribution, a flat trend indicates an exponential distribution, and a downward trend points to a light-tailed distribution.

Median Excess Plot is similar to the MEP, but uses the median of the exceedances instead of the mean. This makes the plot more robust to outliers.
}
\examples{
# Create a mean excess plot
excess_plot(x = rexp(100))

# Create a median excess plot without showing the plot
excess_data <- excess_plot(x = rexp(100), method = "median", show_plot = FALSE)

# Customize the plot appearance
excess_plot(x = rexp(100), col = "maroon", main = "Mean Excess Plot")

}
